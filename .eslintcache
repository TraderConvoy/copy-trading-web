[{"E:\\Freelancers\\copy-trading-web\\src\\index.tsx":"1","E:\\Freelancers\\copy-trading-web\\src\\lang\\index.ts":"2","E:\\Freelancers\\copy-trading-web\\src\\boot\\configureStore.ts":"3","E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\DocumentWidthContext.tsx":"4","E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\ToastContext.tsx":"5","E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\UrlImagesContext.tsx":"6","E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\ErrorContext.tsx":"7","E:\\Freelancers\\copy-trading-web\\src\\lang\\en\\index.ts":"8","E:\\Freelancers\\copy-trading-web\\src\\lang\\vi\\index.ts":"9","E:\\Freelancers\\copy-trading-web\\src\\screens\\screenSaga.tsx":"10","E:\\Freelancers\\copy-trading-web\\src\\containers\\redux\\common\\actions.ts":"11","E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\redux\\reducers.tsx":"12","E:\\Freelancers\\copy-trading-web\\src\\screens\\yourHistory\\ducks\\actions.tsx":"13","E:\\Freelancers\\copy-trading-web\\src\\screens\\yourHistory\\services.tsx":"14","E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\redux\\actions.tsx":"15","E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\index.tsx":"16","E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\index.tsx":"17","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\ducks\\actions.ts":"18","E:\\Freelancers\\copy-trading-web\\src\\screens\\expertManagement\\index.tsx":"19","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\index.tsx":"20","E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\services.ts":"21","E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\ducks\\actions.tsx":"22","E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\components\\Overview.tsx":"23","E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\components\\Transfer.tsx":"24","E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\CustomerLayout.tsx":"25","E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\components\\ModalTransfer.tsx":"26","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\components\\InvestmentHistoryItem.tsx":"27","E:\\Freelancers\\copy-trading-web\\src\\containers\\hooks\\useErrorContext.ts":"28","E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Pagination.tsx":"29","E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\ModalConfirm.tsx":"30","E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\Navbar.tsx":"31","E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Buttons.tsx":"32","E:\\Freelancers\\copy-trading-web\\src\\App.tsx":"33","E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\redux\\operations.ts":"34","E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\ducks\\operations.tsx":"35","E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\redux\\actions.ts":"36","E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\redux\\actions.ts":"37","E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\index.tsx":"38","E:\\Freelancers\\copy-trading-web\\src\\utils\\configServices.ts":"39","E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\services.tsx":"40","E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\components\\LoginForm.tsx":"41","E:\\Freelancers\\copy-trading-web\\src\\screens\\yourHistory\\components\\TableYourHistory.tsx":"42","E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\components\\ModalStartCopy.tsx":"43","E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Loading.tsx":"44","E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\Sidebar.tsx":"45","E:\\Freelancers\\copy-trading-web\\src\\constant\\datatable.tsx":"46","E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Toggle.tsx":"47","E:\\Freelancers\\copy-trading-web\\src\\routes\\index.tsx":"48","E:\\Freelancers\\copy-trading-web\\src\\containers\\redux\\common\\reducers.ts":"49","E:\\Freelancers\\copy-trading-web\\src\\screens\\screenReducers.tsx":"50","E:\\Freelancers\\copy-trading-web\\src\\constant\\localstore.ts":"51","E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\redux\\operations.tsx":"52","E:\\Freelancers\\copy-trading-web\\src\\constant\\sidebar.ts":"53","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\ducks\\operations.ts":"54","E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\services.ts":"55","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentCalculator\\index.tsx":"56","E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\index.tsx":"57","E:\\Freelancers\\copy-trading-web\\src\\screens\\expertManagement\\components\\TableTradingHistory.tsx":"58","E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\Header.tsx":"59","E:\\Freelancers\\copy-trading-web\\src\\utils\\utilities.ts":"60","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\services.ts":"61","E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\index.tsx":"62","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentCalculator\\components\\InvestmentCalculator.tsx":"63","E:\\Freelancers\\copy-trading-web\\src\\constant\\config.ts":"64"},{"size":556,"mtime":1606674595077,"results":"65","hashOfConfig":"66"},{"size":394,"mtime":1606226348174,"results":"67","hashOfConfig":"66"},{"size":2391,"mtime":1607168525345,"results":"68","hashOfConfig":"66"},{"size":674,"mtime":1606674595076,"results":"69","hashOfConfig":"66"},{"size":1029,"mtime":1606226348172,"results":"70","hashOfConfig":"66"},{"size":353,"mtime":1607137311267,"results":"71","hashOfConfig":"66"},{"size":2005,"mtime":1607168645102,"results":"72","hashOfConfig":"66"},{"size":72,"mtime":1606226348174,"results":"73","hashOfConfig":"66"},{"size":72,"mtime":1606226348175,"results":"74","hashOfConfig":"66"},{"size":620,"mtime":1607168645262,"results":"75","hashOfConfig":"66"},{"size":225,"mtime":1607168525348,"results":"76","hashOfConfig":"66"},{"size":442,"mtime":1607196011183,"results":"77","hashOfConfig":"66"},{"size":279,"mtime":1607168525358,"results":"78","hashOfConfig":"66"},{"size":261,"mtime":1607168525359,"results":"79","hashOfConfig":"66"},{"size":606,"mtime":1607196222394,"results":"80","hashOfConfig":"66"},{"size":223,"mtime":1607137311268,"results":"81","hashOfConfig":"66"},{"size":1484,"mtime":1607168525356,"results":"82","hashOfConfig":"66"},{"size":524,"mtime":1607168525352,"results":"83","hashOfConfig":"66"},{"size":3043,"mtime":1606840148446,"results":"84","hashOfConfig":"66"},{"size":4922,"mtime":1607168525353,"results":"85","hashOfConfig":"66"},{"size":228,"mtime":1607168525357,"results":"86","hashOfConfig":"66"},{"size":590,"mtime":1607168525350,"results":"87","hashOfConfig":"66"},{"size":1465,"mtime":1606840148448,"results":"88","hashOfConfig":"66"},{"size":3057,"mtime":1607168525356,"results":"89","hashOfConfig":"66"},{"size":906,"mtime":1606842384607,"results":"90","hashOfConfig":"66"},{"size":3298,"mtime":1607168525349,"results":"91","hashOfConfig":"66"},{"size":3219,"mtime":1607168525352,"results":"92","hashOfConfig":"66"},{"size":229,"mtime":1607156958181,"results":"93","hashOfConfig":"66"},{"size":3259,"mtime":1607168525347,"results":"94","hashOfConfig":"66"},{"size":1203,"mtime":1607168525346,"results":"95","hashOfConfig":"66"},{"size":1914,"mtime":1606842384641,"results":"96","hashOfConfig":"66"},{"size":846,"mtime":1607168525346,"results":"97","hashOfConfig":"66"},{"size":1954,"mtime":1606674595074,"results":"98","hashOfConfig":"66"},{"size":766,"mtime":1607168525354,"results":"99","hashOfConfig":"66"},{"size":2505,"mtime":1607168525350,"results":"100","hashOfConfig":"66"},{"size":221,"mtime":1607168525357,"results":"101","hashOfConfig":"66"},{"size":215,"mtime":1607168525354,"results":"102","hashOfConfig":"66"},{"size":2744,"mtime":1607168525353,"results":"103","hashOfConfig":"66"},{"size":1877,"mtime":1607192315950,"results":"104","hashOfConfig":"66"},{"size":998,"mtime":1607168525351,"results":"105","hashOfConfig":"66"},{"size":3101,"mtime":1607196784394,"results":"106","hashOfConfig":"66"},{"size":804,"mtime":1607168525358,"results":"107","hashOfConfig":"66"},{"size":10663,"mtime":1607187807256,"results":"108","hashOfConfig":"66"},{"size":385,"mtime":1607168525346,"results":"109","hashOfConfig":"66"},{"size":2763,"mtime":1607168465430,"results":"110","hashOfConfig":"66"},{"size":3339,"mtime":1607168525345,"results":"111","hashOfConfig":"66"},{"size":357,"mtime":1606674595075,"results":"112","hashOfConfig":"66"},{"size":2833,"mtime":1607169001982,"results":"113","hashOfConfig":"66"},{"size":385,"mtime":1607168525348,"results":"114","hashOfConfig":"66"},{"size":208,"mtime":1607168645253,"results":"115","hashOfConfig":"66"},{"size":336,"mtime":1606226348171,"results":"116","hashOfConfig":"66"},{"size":1121,"mtime":1607196619069,"results":"117","hashOfConfig":"66"},{"size":300,"mtime":1606840148443,"results":"118","hashOfConfig":"66"},{"size":2426,"mtime":1607168525352,"results":"119","hashOfConfig":"66"},{"size":220,"mtime":1607168525354,"results":"120","hashOfConfig":"66"},{"size":565,"mtime":1606674595081,"results":"121","hashOfConfig":"66"},{"size":618,"mtime":1606674595077,"results":"122","hashOfConfig":"66"},{"size":717,"mtime":1607168525351,"results":"123","hashOfConfig":"66"},{"size":551,"mtime":1606840148443,"results":"124","hashOfConfig":"66"},{"size":421,"mtime":1607168525361,"results":"125","hashOfConfig":"66"},{"size":818,"mtime":1607168525353,"results":"126","hashOfConfig":"66"},{"size":4030,"mtime":1607168525350,"results":"127","hashOfConfig":"66"},{"size":4327,"mtime":1607168525352,"results":"128","hashOfConfig":"66"},{"size":160,"mtime":1607168645047,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"1r90fe4",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"135"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"135"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"135"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"135"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Freelancers\\copy-trading-web\\src\\index.tsx",[],["271","272"],"E:\\Freelancers\\copy-trading-web\\src\\lang\\index.ts",[],["273","274"],"E:\\Freelancers\\copy-trading-web\\src\\boot\\configureStore.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\DocumentWidthContext.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\ToastContext.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\UrlImagesContext.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\contexts\\ErrorContext.tsx",["275"],"import system from 'constant/localstore';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\n\ntype IContextProps = {\n  addError: (err: Response, message?: string | null) => void;\n};\n\nexport const ErrorContext = React.createContext<IContextProps>({\n  addError: (err: Response, message?: string | null) => ({ err, message }),\n});\n\nexport const ErrorContextProvider = ({ children }) => {\n  const history = useHistory();\n  const { i18n } = useTranslation();\n  const [errMess, setErrMess] = useState('');\n\n  useEffect(() => {\n    if (!!errMess) {\n      const timeout = setTimeout(() => setErrMess(''), [5000]);\n      return () => clearTimeout(timeout);\n    }\n  }, [errMess]);\n\n  const addError = async (err: Response, message: null) => {\n    if (message) {\n      setErrMess(message || '');\n      return;\n    }\n    if (err.status === system.RESPONSE_STATUS.NOT_FOUND)\n      setErrMess(\n        i18n.language === 'vi'\n          ? 'Máy chủ gặp sự cố, vui lòng liên hệ với quản trị viên'\n          : 'There is a problem with the server, please contact the administrator',\n      );\n\n    if (err.status === system.RESPONSE_STATUS.FORBIDDEN) {\n      localStorage.removeItem(system.TOKEN);\n      history.push('/copy-trading/login');\n    }\n\n    if (err.status === system.RESPONSE_STATUS.INTERVAL_SERVER) {\n      const error = await err.json();\n      setErrMess(error.error_description || message || '');\n    }\n  };\n\n  const contextValue = {\n    addError: useCallback((err, message) => addError(err, message), []),\n  };\n\n  return (\n    <ErrorContext.Provider value={contextValue}>\n      {children}\n      {errMess ? (\n        <div className=\"toasts-wrapper\">\n          <div className=\"toast error\">{errMess}</div>\n        </div>\n      ) : null}\n      {/* <div className=\"toasts-wrapper\">{errMess ? <div className=\"toast\">{errMess}</div> : null}</div> */}\n    </ErrorContext.Provider>\n  );\n};\n","E:\\Freelancers\\copy-trading-web\\src\\lang\\en\\index.ts",["276"],"import common from './common.json';\r\n\r\nexport default {\r\n  common,\r\n};\r\n","E:\\Freelancers\\copy-trading-web\\src\\lang\\vi\\index.ts",["277"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\screenSaga.tsx",["278"],"// import commonSaga from '../containers/redux/operations';\nimport dashboardSaga from 'screens/dashboard/ducks/operations';\nimport investmentHistorySaga from 'screens/investmentHistory/ducks/operations';\nimport leaderDetailSaga from 'screens/leaderDetail/redux/operations';\nimport walletSaga from 'screens/wallet/redux/operations';\nimport userHistorySaga from '../screens/yourHistory/ducks/operations';\nimport loginSaga from './login/redux/operations';\n\nexport default {\n  // ...commonSaga,\n  ...dashboardSaga,\n  ...userHistorySaga,\n  ...investmentHistorySaga,\n  ...leaderDetailSaga,\n  ...loginSaga,\n  ...walletSaga,\n};\n","E:\\Freelancers\\copy-trading-web\\src\\containers\\redux\\common\\actions.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\redux\\reducers.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\yourHistory\\ducks\\actions.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\yourHistory\\services.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\redux\\actions.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\index.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\index.tsx",["279","280","281"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\ducks\\actions.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\expertManagement\\index.tsx",["282","283"],"import { UrlImagesContext } from 'containers/contexts/UrlImagesContext';\r\nimport React, { useContext, useState } from 'react';\r\nimport TableProfitSharingHistory from './components/TableProfitSharingHistory';\r\nimport TableTradingHistory from './components/TableTradingHistory';\r\n\r\nconst tabs = {\r\n  TRADING_HISTORY: 'trading_history',\r\n  PROFIT_SHARING_HISTORY: 'profit_sharing_history',\r\n};\r\n\r\nconst fakeTradingHistory = {\r\n  time: '18/11/2020 - 18:20:39',\r\n  type: 'BTC/USDT',\r\n  order: 'buy',\r\n  open: '9,486.2 USDT',\r\n  close: '9,658.3 USDT',\r\n  investment: '100.00',\r\n  profit: '+95 USD',\r\n};\r\n\r\nconst fakeProfitSharingHistory = {\r\n  time: '18/11/2020 - 18:20:39',\r\n  type: 'BTC/USDT',\r\n  order: 'buy',\r\n  open: '9,486.2 USDT',\r\n  close: '9,658.3 USDT',\r\n  investment: '100.00',\r\n  profit_sharing: '+5 USD',\r\n  username: 'Donkin391',\r\n};\r\n\r\nconst ExpertManagement = () => {\r\n  const [tab, setTab] = useState(tabs.TRADING_HISTORY);\r\n  const urlImg = useContext(UrlImagesContext);\r\n\r\n  const fakeDataTradingHistory = Array(80).fill(fakeTradingHistory);\r\n  const fakeDataProfitSharingHistory = Array(90).fill(fakeProfitSharingHistory);\r\n\r\n  return (\r\n    <div className=\"expert-management\">\r\n      <div className=\"expert-management__header\">\r\n        <div className=\"title-wrapper\">\r\n          <p className=\"title\">Expert Management</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"expert-management__content\">\r\n        <div className=\"card-wrapper\">\r\n          <div className=\"start-copy-trade\">\r\n            <img src={`${urlImg}icons/start-copy-trade.svg`} />\r\n            <p>Start copy trade now to receive profit from all Copier who copy your trade</p>\r\n            <button>Start copy trade</button>\r\n          </div>\r\n          <div className=\"withdrawal\">\r\n            <img src={`${urlImg}icons/withdrawal.svg`} />\r\n            <div className=\"detail\">\r\n              <p>Total 5% profit sharing</p>\r\n              <p className=\"total\">$ 2116</p>\r\n            </div>\r\n            <button>withdrawal</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"tab-wrapper\">\r\n          <div className=\"tab__name\">\r\n            <p\r\n              className={`name ${tab === tabs.TRADING_HISTORY ? 'active' : ''}`}\r\n              onClick={() => setTab(tabs.TRADING_HISTORY)}\r\n            >\r\n              Trading history\r\n            </p>\r\n            <p\r\n              className={`name ${tab === tabs.PROFIT_SHARING_HISTORY ? 'active' : ''}`}\r\n              onClick={() => setTab(tabs.PROFIT_SHARING_HISTORY)}\r\n            >\r\n              Profit sharing history\r\n            </p>\r\n          </div>\r\n          <div className=\"tab__content\">\r\n            {tab === tabs.TRADING_HISTORY ? <TableTradingHistory data={fakeDataTradingHistory} /> : null}\r\n            {tab === tabs.PROFIT_SHARING_HISTORY ? (\r\n              <TableProfitSharingHistory data={fakeDataProfitSharingHistory} />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExpertManagement);\r\n","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\index.tsx",["284"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\services.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\ducks\\actions.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\components\\Overview.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\components\\Transfer.tsx",["285"],"import { UrlImagesContext } from 'containers/contexts/UrlImagesContext';\r\nimport React, { useContext, useMemo, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useDispatch } from 'react-redux';\r\nimport { transferAmountAction } from 'screens/dashboard/ducks/actions';\r\n\r\nconst Transfer = () => {\r\n  const dispatch = useDispatch();\r\n  const [transferValue, setTransferValue] = useState('');\r\n  const urlImg = useContext(UrlImagesContext);\r\n\r\n  const handleTransferValueChange = (value) => {\r\n    setTransferValue(value);\r\n  };\r\n\r\n  const validData = useMemo(() => {\r\n    if (!transferValue || parseFloat(transferValue) < 1000) return false;\r\n    return true;\r\n  }, [transferValue]);\r\n\r\n  const handleTransfer = () => {\r\n    //TODO: update service khi có api | should check  both server client update more than 1000\r\n    const body = {\r\n      // access_token: localStorage.getItem(system.TOKEN),\r\n      amount: transferValue,\r\n    };\r\n    alert(JSON.stringify(body));\r\n    return;\r\n    dispatch(transferAmountAction(body, (res) => {}));\r\n  };\r\n\r\n  return (\r\n    <div className=\"transfer\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <div className=\"modal-name\">\r\n            <p>Transfer</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content-wrapper\">\r\n            <div className=\"from-wrapper\">\r\n              <p className=\"name\">From</p>\r\n              <p className=\"account\">Real account</p>\r\n            </div>\r\n            <div className=\"to-wrapper\">\r\n              <p className=\"name\">To</p>\r\n              <p className=\"account\">Copy trade account</p>\r\n            </div>\r\n          </div>\r\n          <img src={`${urlImg}icons/transfer-icon.svg`} className=\"transfer-icon\" alt=\"transfer-icon\" />\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <div className=\"detail-wrapper\">\r\n            <p>Amount</p>\r\n            <div className=\"available-wrapper\">\r\n              <p className=\"available\">Available :</p>\r\n              <p className=\"number\">1000 USD</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"button-wrapper\">\r\n            <div className=\"input\">\r\n              <p className=\"currency\">USD</p>\r\n              {/* <input value={transferValue} onChange={(event) => handleTransferValueChange(event)} /> */}\r\n              <NumberFormat\r\n                thousandSeparator={true}\r\n                onValueChange={(values) => handleTransferValueChange(values.floatValue)}\r\n                decimalScale={2}\r\n                value={transferValue}\r\n              />\r\n            </div>\r\n            <div className=\"button\">\r\n              <button disabled={!validData} onClick={() => handleTransfer()}>\r\n                Transfer\r\n              </button>\r\n            </div>\r\n            <p className=\"alert-detail\">500 USD is minimum required deposit to start copy trade</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n","E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\CustomerLayout.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\components\\ModalTransfer.tsx",["286"],"import system from 'constant/localstore';\r\nimport { UrlImagesContext } from 'containers/contexts/UrlImagesContext';\r\nimport React, { useContext, useMemo, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useDispatch } from 'react-redux';\r\nimport { transferAmountAction } from '../ducks/actions';\r\nconst ModalTransfer = ({ isOpen, closeModal }) => {\r\n  const [transferValue, setTransferValue] = useState('');\r\n  const urlImg = useContext(UrlImagesContext);\r\n  const dispatch = useDispatch();\r\n  const handleTransfer = () => {\r\n    //TODO: update service khi có api | should check  both server client update more than 1000\r\n    let body = {\r\n      access_token: localStorage.getItem(system.TOKEN),\r\n      amount: transferValue,\r\n    };\r\n    alert(JSON.stringify(body));\r\n    return;\r\n    dispatch(transferAmountAction(body, (res) => {}));\r\n  };\r\n\r\n  const handleTransferValueChange = (value) => {\r\n    setTransferValue(value);\r\n  };\r\n\r\n  const validData = useMemo(() => {\r\n    if (!transferValue || parseFloat(transferValue) < 1000) return false;\r\n    return true;\r\n  }, [transferValue]);\r\n\r\n  return (\r\n    <Modal show={isOpen} onHide={() => closeModal()} className=\"transfer-modal\" size=\"lg\">\r\n      <Modal.Header>\r\n        <div className=\"modal-name\">\r\n          <p>Transfer</p>\r\n        </div>\r\n        <div className=\"close-wrapper\">\r\n          <button onClick={() => closeModal()}>\r\n            <img src={`${urlImg}icons/close.svg`} alt=\"close\" />\r\n          </button>\r\n        </div>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"from-wrapper\">\r\n            <p className=\"name\">From</p>\r\n            <p className=\"account\">Real account</p>\r\n          </div>\r\n          <div className=\"to-wrapper\">\r\n            <p className=\"name\">To</p>\r\n            <p className=\"account\">Copy trade account</p>\r\n          </div>\r\n        </div>\r\n        <img src={`${urlImg}icons/transfer-icon.svg`} className=\"transfer-icon\" alt=\"transfer-icon\" />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div className=\"detail-wrapper\">\r\n          <p>Amount</p>\r\n          <div className=\"available-wrapper\">\r\n            <p className=\"available\">Available :</p>\r\n            <p className=\"number\">1000 USD</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"button-wrapper\">\r\n          <div className=\"input\">\r\n            <p className=\"currency\">USD</p>\r\n            {/* <input value={transferValue} onChange={(event) => handleTransferValueChange(event)} /> */}\r\n            <NumberFormat\r\n              thousandSeparator={true}\r\n              onValueChange={(values) => handleTransferValueChange(values.floatValue)}\r\n              prefix={'$'}\r\n              placeholder=\"$\"\r\n              decimalScale={2}\r\n              value={transferValue}\r\n            />\r\n          </div>\r\n          <div className=\"button\">\r\n            <button disabled={!validData} onClick={() => handleTransfer()}>\r\n              Transfer\r\n            </button>\r\n          </div>\r\n          <p className=\"alert-detail\">500 USD is minimum required deposit to start copy trade</p>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalTransfer;\r\n","E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\components\\InvestmentHistoryItem.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\hooks\\useErrorContext.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Pagination.tsx",["287","288","289"],"E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\ModalConfirm.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\Navbar.tsx",["290"],"import { UrlImagesContext } from 'containers/contexts/UrlImagesContext';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Navbar = () => {\n  const urlImg = useContext(UrlImagesContext);\n  const history = useHistory();\n\n  return (\n    <div className=\"header-nav\">\n      <div className=\"nav-wrapper\">\n        <div className=\"nav-left\">\n          <div className=\"logo\">\n            <p onClick={() => history.push('/')}>\n              FAST <span>MONEY</span> <span>Copy Trade</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"nav-right\">\n          <div className=\"user-wrapper\">\n            <div className=\"avatar-wrapper\">C</div>\n            <p className=\"username\">User name</p>\n          </div>\n          {/* <div className=\"notification-wrapper\">\n            <div className=\"icon\">\n              <img src={`${urlImg}icons/bell.svg`} />\n            </div>\n            <p>Notification</p>\n          </div> */}\n          <div className=\"practice-account-wrapper\">\n            <div className=\"wrapper-left\">\n              <p>Practice Account</p>\n              <p className=\"wallet\">$ 23,694</p>\n            </div>\n            {/* <div className=\"wrapper-right\">\n              <button className=\"dropdown\">\n                <img src={`${urlImg}/icons/dropdown-icon.svg`} alt=\"icon-header\" />\n              </button>\n            </div> */}\n          </div>\n          {/* <div className=\"type-wrapper\">\n            <div className=\"type\">\n              <p>IB</p>\n            </div>\n          </div>\n          <div className=\"level-wrapper\">\n            <div className=\"level\">\n              <p>Level</p>\n              <p>10</p>\n            </div>\n          </div> */}\n          {/* <div className=\"deposit-wrapper\">\n            <button>Deposit</button>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Buttons.tsx",["291","292","293"],"import { UrlImagesContext } from 'containers/contexts/UrlImagesContext';\r\nimport React, { useContext } from 'react';\r\n\r\nexport const ButtonStart = ({ ...rest }) => {\r\n  const urlImg = useContext(UrlImagesContext);\r\n  return (\r\n    <button {...rest} className=\"button-start\">\r\n      <img src={`${urlImg}icons/start.svg`} />\r\n      Start\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const ButtonPause = ({ ...rest }) => {\r\n  const urlImg = useContext(UrlImagesContext);\r\n  return (\r\n    <button {...rest} className=\"button-pause\">\r\n      <img src={`${urlImg}icons/pause.svg`} />\r\n      Pause\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const ButtonStop = ({ ...rest }) => {\r\n  const urlImg = useContext(UrlImagesContext);\r\n  return (\r\n    <button {...rest} className=\"button-stop\">\r\n      <img src={`${urlImg}icons/stop.svg`} />\r\n      Stop\r\n    </button>\r\n  );\r\n};\r\n","E:\\Freelancers\\copy-trading-web\\src\\App.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\redux\\operations.ts",["294"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\ducks\\operations.tsx",["295"],"import { loadingOffAction, loadingOnAction } from 'containers/redux/common/actions';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { createTradingCopy, getDataExperts, getListTradingCopies, tranferAmountService } from '../services';\r\nimport {\r\n  createTradingCopyAction,\r\n  getListExpertsAction,\r\n  getListTradingCopiesAction,\r\n  setListExpertsAction,\r\n  transferAmountAction,\r\n} from './actions';\r\n\r\nfunction* getDataExpertsWatcher() {\r\n  yield takeLatest(getListExpertsAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(getDataExperts, payload.body);\r\n      if (result) {\r\n        yield put(setListExpertsAction(result.data));\r\n        if (payload.callback) payload.callback(null, result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nfunction* getListTradingCopiesWatcher() {\r\n  yield takeLatest(getListTradingCopiesAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(getListTradingCopies, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback(null, result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nfunction* createTradingCopyWatcher() {\r\n  yield takeLatest(createTradingCopyAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(createTradingCopy, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback(null, result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\nfunction* transferAmountWatcher() {\r\n  yield takeLatest(transferAmountAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(tranferAmountService, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback(null, result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getDataExpertsWatcher,\r\n  getListTradingCopiesWatcher,\r\n  createTradingCopyWatcher,\r\n  transferAmountWatcher,\r\n};\r\n","E:\\Freelancers\\copy-trading-web\\src\\screens\\wallet\\redux\\actions.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\redux\\actions.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\index.tsx",["296","297","298"],"import Loading from 'containers/components/Loading';\r\nimport useError from 'containers/hooks/useErrorContext';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport TableLeaderHistory from 'screens/expertManagement/components/TableTradingHistory';\r\nimport LeaderInfo from './components/LeaderInfo';\r\nimport Overview from './components/Overview';\r\nimport { getLeaderDetailAction } from './redux/actions';\r\n\r\nconst tabs = {\r\n  OVERVIEW: 'overview',\r\n  LEADER_HISTORY: 'leader_history',\r\n};\r\n\r\nconst fakeData = {\r\n  time: '18/11/2020 - 18:20:39',\r\n  type: 'BTC/USDT',\r\n  order: 'buy',\r\n  open: '9,486.2 USDT',\r\n  close: '9,658.3 USDT',\r\n  investment: '100.00',\r\n  profit: '+95 USD',\r\n};\r\n\r\nconst LeaderDetail = () => {\r\n  const [data, setData] = useState({});\r\n  const [loadingPage, setLoadingPage] = useState(true);\r\n  const [tab, setTab] = useState(tabs.OVERVIEW);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { addError } = useError();\r\n  const { leaderID }: any = useParams();\r\n\r\n  useEffect(() => {\r\n    handleGetLeaderDetail();\r\n  }, []);\r\n\r\n  const handleGetLeaderDetail = () => {\r\n    setLoadingPage(true);\r\n    const body = {\r\n      id_expert: leaderID,\r\n    };\r\n    dispatch(\r\n      getLeaderDetailAction(body, (err, res) => {\r\n        if (err) addError(err, null);\r\n        else {\r\n          console.log(res);\r\n          setLoadingPage(false);\r\n        }\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Loading isLoading={loadingPage}>\r\n      <div className=\"leader-detail\">\r\n        <div className=\"leader-detail__header\">\r\n          <div className=\"title-wrapper\">\r\n            <p onClick={() => history.push('/copy-tradding')}>Back</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"leader-detail__content\">\r\n          <LeaderInfo />\r\n          <div className=\"tab-wrapper\">\r\n            <div className=\"tab-names\">\r\n              <p className={`tab ${tab === tabs.OVERVIEW ? 'active' : ''}`} onClick={() => setTab(tabs.OVERVIEW)}>\r\n                Overview\r\n              </p>\r\n              <p\r\n                className={`tab ${tab === tabs.LEADER_HISTORY ? 'active' : ''}`}\r\n                onClick={() => setTab(tabs.LEADER_HISTORY)}\r\n              >\r\n                Leader History\r\n              </p>\r\n            </div>\r\n            <div className=\"tab-content\">\r\n              {tab === tabs.OVERVIEW ? <Overview /> : null}\r\n              {tab === tabs.LEADER_HISTORY ? <TableLeaderHistory data={Array(99).fill(fakeData)} /> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Loading>\r\n  );\r\n};\r\n\r\nexport default React.memo(LeaderDetail);\r\n","E:\\Freelancers\\copy-trading-web\\src\\utils\\configServices.ts",["299"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\services.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\components\\LoginForm.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\yourHistory\\components\\TableYourHistory.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\components\\ModalStartCopy.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Loading.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\Sidebar.tsx",["300"],"E:\\Freelancers\\copy-trading-web\\src\\constant\\datatable.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\components\\Toggle.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\routes\\index.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\redux\\common\\reducers.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\screenReducers.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\constant\\localstore.ts",["301"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\login\\redux\\operations.tsx",["302"],"E:\\Freelancers\\copy-trading-web\\src\\constant\\sidebar.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\ducks\\operations.ts",["303"],"import { loadingOffAction, loadingOnAction } from 'containers/redux/common/actions';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { getListTradingCopies, pauseTradingCopy, resumeTradingCopy, stopTradingCopy } from '../services';\r\nimport {\r\n  getListTradingCopyAction,\r\n  pauseTradingCopyAction,\r\n  resumeTradingCopyAction,\r\n  stopTradingCopyAction,\r\n} from './actions';\r\n\r\nfunction* getListTradingCopyWatcher() {\r\n  yield takeLatest(getListTradingCopyAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(getListTradingCopies, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback('', result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nfunction* resumeTradingCopyWatcher() {\r\n  yield takeLatest(resumeTradingCopyAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(resumeTradingCopy, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback('', result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nfunction* pauseTradingCopyWatcher() {\r\n  yield takeLatest(pauseTradingCopyAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(pauseTradingCopy, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback('', result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback(error, {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nfunction* stopTradingCopyWatcher() {\r\n  yield takeLatest(stopTradingCopyAction, function* ({ payload }) {\r\n    try {\r\n      yield put(loadingOnAction());\r\n      const result = yield call(stopTradingCopy, payload.body);\r\n      if (result) {\r\n        if (payload.callback) payload.callback('', result);\r\n      }\r\n    } catch (error) {\r\n      if (payload.callback) payload.callback('Server Error', {});\r\n    } finally {\r\n      yield put(loadingOffAction());\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getListTradingCopyWatcher,\r\n  pauseTradingCopyWatcher,\r\n  stopTradingCopyWatcher,\r\n  resumeTradingCopyWatcher,\r\n};\r\n","E:\\Freelancers\\copy-trading-web\\src\\screens\\leaderDetail\\services.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentCalculator\\index.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\index.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\expertManagement\\components\\TableTradingHistory.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\containers\\layout\\Header.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\utils\\utilities.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentHistory\\services.ts",[],"E:\\Freelancers\\copy-trading-web\\src\\screens\\dashboard\\index.tsx",["304","305"],"E:\\Freelancers\\copy-trading-web\\src\\screens\\investmentCalculator\\components\\InvestmentCalculator.tsx",[],"E:\\Freelancers\\copy-trading-web\\src\\constant\\config.ts",["306"],{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"307","replacedBy":"311"},{"ruleId":"309","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":50,"column":69,"nodeType":"315","endLine":50,"endColumn":71,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":3,"column":1,"nodeType":"319","endLine":5,"endColumn":3},{"ruleId":"317","severity":1,"message":"318","line":3,"column":1,"nodeType":"319","endLine":5,"endColumn":3},{"ruleId":"317","severity":1,"message":"318","line":9,"column":1,"nodeType":"319","endLine":17,"endColumn":3},{"ruleId":"320","severity":1,"message":"321","line":17,"column":10,"nodeType":"322","messageId":"323","endLine":17,"endColumn":21},{"ruleId":"320","severity":1,"message":"324","line":17,"column":23,"nodeType":"322","messageId":"323","endLine":17,"endColumn":37},{"ruleId":"320","severity":1,"message":"325","line":18,"column":9,"nodeType":"322","messageId":"323","endLine":18,"endColumn":17},{"ruleId":"326","severity":1,"message":"327","line":49,"column":13,"nodeType":"328","endLine":49,"endColumn":64},{"ruleId":"326","severity":1,"message":"327","line":54,"column":13,"nodeType":"328","endLine":54,"endColumn":58},{"ruleId":"313","severity":1,"message":"329","line":30,"column":6,"nodeType":"315","endLine":30,"endColumn":12,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":29,"column":5,"nodeType":"333","messageId":"334","endLine":29,"endColumn":55},{"ruleId":"331","severity":1,"message":"332","line":20,"column":5,"nodeType":"333","messageId":"334","endLine":20,"endColumn":55},{"ruleId":"335","severity":1,"message":"336","line":21,"column":7,"nodeType":"322","messageId":"337","endLine":21,"endColumn":17},{"ruleId":"338","severity":1,"message":"339","line":68,"column":35,"nodeType":"340","messageId":"341","endLine":68,"endColumn":42},{"ruleId":"338","severity":1,"message":"339","line":69,"column":47,"nodeType":"340","messageId":"341","endLine":69,"endColumn":54},{"ruleId":"320","severity":1,"message":"342","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":8,"column":7,"nodeType":"328","endLine":8,"endColumn":47},{"ruleId":"326","severity":1,"message":"327","line":18,"column":7,"nodeType":"328","endLine":18,"endColumn":47},{"ruleId":"326","severity":1,"message":"327","line":28,"column":7,"nodeType":"328","endLine":28,"endColumn":46},{"ruleId":"317","severity":1,"message":"318","line":22,"column":1,"nodeType":"319","endLine":24,"endColumn":3},{"ruleId":"317","severity":1,"message":"318","line":76,"column":1,"nodeType":"319","endLine":81,"endColumn":3},{"ruleId":"320","severity":1,"message":"343","line":27,"column":10,"nodeType":"322","messageId":"323","endLine":27,"endColumn":14},{"ruleId":"320","severity":1,"message":"344","line":27,"column":16,"nodeType":"322","messageId":"323","endLine":27,"endColumn":23},{"ruleId":"313","severity":1,"message":"345","line":38,"column":6,"nodeType":"315","endLine":38,"endColumn":8,"suggestions":"346"},{"ruleId":"317","severity":1,"message":"318","line":48,"column":1,"nodeType":"319","endLine":48,"endColumn":44},{"ruleId":"326","severity":1,"message":"327","line":60,"column":9,"nodeType":"328","endLine":60,"endColumn":48},{"ruleId":"317","severity":1,"message":"318","line":16,"column":1,"nodeType":"319","endLine":22,"endColumn":3},{"ruleId":"317","severity":1,"message":"318","line":31,"column":1,"nodeType":"319","endLine":33,"endColumn":3},{"ruleId":"317","severity":1,"message":"318","line":75,"column":1,"nodeType":"319","endLine":80,"endColumn":3},{"ruleId":"320","severity":1,"message":"347","line":25,"column":9,"nodeType":"322","messageId":"323","endLine":25,"endColumn":16},{"ruleId":"313","severity":1,"message":"348","line":32,"column":6,"nodeType":"315","endLine":32,"endColumn":12,"suggestions":"349"},{"ruleId":"317","severity":1,"message":"318","line":1,"column":1,"nodeType":"319","endLine":5,"endColumn":3},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],["350"],["351"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'addError'. Either include it or remove the dependency array.","ArrayExpression",["352"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'dataHistory' is assigned a value but never used.","Identifier","unusedVar","'setDataHistory' is assigned a value but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'handleGetListTradingCopy'. Either include it or remove the dependency array.",["353"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","@typescript-eslint/no-redeclare","'Pagination' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'urlImg' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleGetLeaderDetail'. Either include it or remove the dependency array.",["354"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleGetListExpert'. Either include it or remove the dependency array.",["355"],"no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [addError]",{"range":"364","text":"365"},"Update the dependencies array to be: [handleGetListTradingCopy, page]",{"range":"366","text":"367"},"Update the dependencies array to be: [handleGetLeaderDetail]",{"range":"368","text":"369"},"Update the dependencies array to be: [handleGetListExpert, page]",{"range":"370","text":"371"},[1604,1606],"[addError]",[1049,1055],"[handleGetListTradingCopy, page]",[1181,1183],"[handleGetLeaderDetail]",[1514,1520],"[handleGetListExpert, page]"]